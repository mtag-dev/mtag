
insulate("config", function()
  it("defaults", function()
    stub(os, "getenv")
    local config = require("plugins.mtag.config")
    assert.is_equal(config.controller.hostname, nil)
    assert.is_equal(config.controller.port, 443)
    assert.is_equal(config.controller.prefix, "")
    assert.is_equal(config.controller.secret, nil)
    assert.is_equal(config.controller.ssl, true)
    assert.is_equal(config.controller.ssl_verify, true)

    assert.is_equal(config.redis.hostname, nil)
    assert.is_equal(config.redis.port, 6379)
    assert.is_equal(config.redis.pool_size, 10)
    assert.is_equal(config.redis.backlog, nil)
    assert.is_equal(config.redis.timeout, 1)
    assert.is_equal(config.redis.ssl, false)
    assert.is_equal(config.redis.ssl_verify, false)
    assert.is_equal(config.redis.shared_dict_failover, true)
  end)
end)


insulate("config", function()
  it("all parameters set", function()
    stub(os, "getenv")
    os.getenv.on_call_with("MTAG_CONTROLLER_HOST").returns("controller:81")
    os.getenv.on_call_with("MTAG_CONTROLLER_PREFIX").returns("/some/profix")
    os.getenv.on_call_with("MTAG_CONTROLLER_SECRET").returns("SeCrEt")
    os.getenv.on_call_with("MTAG_CONTROLLER_SSL").returns("false ")
    os.getenv.on_call_with("MTAG_CONTROLLER_SSL_VERIFY").returns(" false")

    os.getenv.on_call_with("MTAG_REDIS_HOST").returns("redis:1234")
    os.getenv.on_call_with("MTAG_REDIS_POOL_SIZE").returns(" 20")
    os.getenv.on_call_with("MTAG_REDIS_BACKLOG").returns("19 ")
    os.getenv.on_call_with("MTAG_REDIS_TIMEOUT").returns(" 2 ")
    os.getenv.on_call_with("MTAG_REDIS_SSL").returns("false ")
    os.getenv.on_call_with("MTAG_REDIS_SSL_VERIFY").returns(" false")
    os.getenv.on_call_with("MTAG_REDIS_SHARED_DICT_FAILOVER").returns(" false ")

    local config = require("plugins.mtag.config")
    assert.is_equal(config.controller.hostname, "controller")
    assert.is_equal(config.controller.port, 81)
    assert.is_equal(config.controller.prefix, "/some/profix")
    assert.is_equal(config.controller.secret, "SeCrEt")
    assert.is_equal(config.controller.ssl, false)
    assert.is_equal(config.controller.ssl_verify, false)

    assert.is_equal(config.redis.hostname, "redis")
    assert.is_equal(config.redis.port, 1234)
    assert.is_equal(config.redis.pool_size, 20)
    assert.is_equal(config.redis.backlog, 19)
    assert.is_equal(config.redis.timeout, 2)
    assert.is_equal(config.redis.ssl, false)
    assert.is_equal(config.redis.ssl_verify, false)
    assert.is_equal(config.redis.shared_dict_failover, false)
  end)
end)


insulate("config", function()
  it("wrong booleans", function()
    stub(os, "getenv")
    -- TODO
  end)
end)


insulate("config", function()
  it("wrong integers", function()
    stub(os, "getenv")
    -- TODO
  end)
end)
